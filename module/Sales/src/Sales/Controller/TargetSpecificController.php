<?php

namespace Sales\Controller;

use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;

use Application\Controller\AuthController;

use Zend\Mvc\MvcEvent;

use Sales\Form;

class TargetSpecificController extends AuthController
{
    /**
     *
     * @var Sales\Entity\Target
     */
    private $target;

    public function onDispatch( MvcEvent $e )
    {
        $tid = $this->params()->fromRoute( 'id', 0 );

        if ( empty($tid) )
        {
            return $this->redirect()->toRoute( 'target' );
        }

        $target = $this->getEntityManager()->find( 'Sales\Entity\Target', $tid );

        if ( !($target instanceof \Sales\Entity\Target) )
        {
            return $this->redirect()->toRoute( 'target' );
        }

        $this->setTarget( $target );

        $this->amendNavigation();

        return parent::onDispatch( $e ); // TODO: Change the autogenerated stub
    }

    public function getTarget()
    {
        return $this->target;
    }

    public function setTarget( \Sales\Entity\Target $target )
    {
        $this->target = $target;

        $sales = $target->getSalesMonth1() + $target->getSalesMonth2() + $target->getSalesMonth3() + $target->getSalesMonth4()
            + $target->getSalesMonth5() + $target->getSalesMonth6() + $target->getSalesMonth7() + $target->getSalesMonth8()
            + $target->getSalesMonth9() + $target->getSalesMonth10() + $target->getSalesMonth11() + $target->getSalesMonth12();

        $margin = $target->getMarginMonth1() + $target->getMarginMonth2() + $target->getMarginMonth3() + $target->getMarginMonth4()
            + $target->getMarginMonth5() + $target->getMarginMonth6() + $target->getMarginMonth7() + $target->getMarginMonth8()
            + $target->getMarginMonth9() + $target->getMarginMonth10() + $target->getMarginMonth11() + $target->getMarginMonth12();

        $this->getView()
            ->setVariable( 'target', $target )
            ->setVariable( 'sales_total', $sales )
            ->setVariable( 'margin_total', $margin );

        return $this;
    }

    public function amendNavigation()
    {
        // check current location
        $action = $this->params( 'action' );

        // get client
        //$target = $this->getTarget();

        // grab navigation object
        $navigation = $this->getServiceLocator()->get( 'navigation' );

        $navigation->addPage( array(
            'type'   => 'uri',
            'active' => true,
            'ico'    => 'icon-bullseye',
            'order'  => 1,
            'route'  => 'target',
            'uri'    => '/targets/',
            'label'  => 'Target',
            'skip'   => true,
            'pages'  => array(
                array(
                    'type'   => 'uri',
                    'active' => true,
                    'ico'    => 'icon-bullseye',
                    'order'  => 1,
                    'uri'    => '/target/',
                    'label'  => ($action == 'index') ? 'Targets' : ucfirst( $action ),
                    'mlabel' => ($action == 'index') ? 'Targets' : ucfirst( $action ),
                )
            )
        ) );


    }

}

